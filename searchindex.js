Search.setIndex({"docnames": ["example", "index", "modules", "phaser", "phaser.evaluation", "phaser.hashing", "phaser.plotting", "phaser.similarities", "phaser.transformers", "phaser.utils"], "filenames": ["example.rst", "index.rst", "modules.rst", "phaser.rst", "phaser.evaluation.rst", "phaser.hashing.rst", "phaser.plotting.rst", "phaser.similarities.rst", "phaser.transformers.rst", "phaser.utils.rst"], "titles": ["Example use cases", "Welcome to phasers\u2019s documentation!", "phaser", "phaser package", "phaser.evaluation package", "phaser.hashing package", "phaser.plotting package", "phaser.similarities package", "phaser.transformers package", "phaser.utils package"], "terms": {"add": [0, 5], "thi": [1, 8], "librari": 1, "i": [1, 4, 7], "develop": 1, "part": 1, "public": 1, "xxx": 1, "submit": 1, "yyi": 1, "If": [1, 7], "you": 1, "find": [1, 4], "us": [1, 4, 5, 8], "your": 1, "research": 1, "pleas": 1, "consid": 1, "cite": 1, "our": 1, "paper": 1, "insert": 1, "bibtex": 1, "refer": 1, "exampl": [1, 4, 5, 8], "case": [1, 8], "packag": [1, 2], "index": 1, "modul": [1, 2], "search": 1, "page": 1, "subpackag": 2, "evalu": [2, 3], "content": 2, "hash": [2, 3, 4, 9], "plot": [2, 3], "similar": [2, 3], "transform": [2, 3, 4, 5], "util": [2, 3, 5], "bitanalyz": [3, 4], "fit": [3, 4, 5, 7, 8], "computemetr": [3, 4], "metricmak": [3, 4], "get_cm": [3, 4], "get_fpr_threshold": [3, 4], "calc_eer": [3, 4], "dist_stat": [3, 4], "make_bit_weight": [3, 4], "pred_at_threshold": [3, 4], "h1": 3, "insid": 3, "colourhash": [3, 5], "computehash": [3, 5], "phash": [3, 5], "pdqhash": [3, 5], "perceptualhash": [3, 5], "wavehash": [3, 5], "interdist": [3, 7], "intradist": [3, 7], "find_inter_samples": [3, 7], "test_synthet": [3, 7], "validate_metr": [3, 7], "border": [3, 8], "crop": [3, 8], "enhanc": [3, 8], "flip": [3, 8], "rescal": [3, 8], "rotat": [3, 8], "transformfromdisk": [3, 8], "savetodisk": [3, 8], "watermark": [3, 8], "imageload": [3, 9], "bin2bool": [3, 9], "bool2binstr": [3, 9], "dump_labelencod": [3, 9], "load_labelencod": [3, 9], "perceptu": [3, 5], "A": [3, 4, 5, 7, 8], "": [3, 8], "e": 3, "r": 3, "_summary_": 4, "class": [4, 5, 7, 8, 9], "df_h": 4, "datafram": [4, 5], "le": [4, 7], "dict": [4, 5, 7, 9], "base": [4, 5, 7, 8, 9], "object": [4, 5, 7, 8, 9], "subset": 4, "y_pred": 4, "ndarrai": 4, "t_l": 4, "int": [4, 7, 8], "a_": 4, "str": [4, 5, 8, 9], "analys": 4, "bit": [4, 5], "given": 4, "data": [4, 7], "defin": [4, 5, 8], "triplet": 4, "The": [4, 5, 7, 8, 9], "algorithm": [4, 5], "metric": [4, 7], "paramet": [4, 5, 8], "pd": [4, 5], "contain": [4, 5], "select": 4, "np": 4, "predict": 4, "gener": 4, "mm": 4, "integ": [4, 8], "label": 4, "string": [4, 5, 7], "anali": 4, "return": [4, 5, 8], "_description_": 4, "type": [4, 5, 8], "_type_": [4, 8], "df_d": 4, "analyse_bit": 4, "fals": [4, 5, 7], "n_job": [4, 5], "1": [4, 5, 7, 8], "backend": [4, 5], "loki": [4, 5], "progress_bar": [4, 5, 7], "true": [4, 5, 8], "norm": 4, "weight": 4, "list": [4, 5, 7, 8], "joblib": 4, "bool": [4, 7, 8], "option": 4, "appli": [4, 5, 8], "balanc": 4, "confusionmatrix": 4, "default": 4, "tupl": [4, 8], "y_true": 4, "y_similar": 4, "threshold": 4, "float": [4, 8], "normal": 4, "breakdown": 4, "comput": [4, 5], "confus": 4, "matrix": 4, "certain": 4, "decis": 4, "make": 4, "none": [4, 5, 7, 8, 9], "instead": 4, "tn": 4, "fp": 4, "fn": 4, "tp": 4, "singl": 4, "max_fpr": 4, "max": 4, "posit": 4, "rate": 4, "fpr": 4, "desir": 4, "maximum": 4, "valu": 4, "tpr": 4, "discov": 4, "where": 4, "frr": 4, "intersect": 4, "arrai": 4, "from": [4, 7, 8], "sklearn": 4, "roc_curv": 4, "eer_scor": 4, "eer_threshold": 4, "import": [4, 5], "numpi": 4, "y": [4, 8], "2": [4, 8], "score": 4, "0": [4, 7, 8], "4": [4, 5], "35": 4, "8": [4, 5], "pos_label": 4, "style": 4, "bitfreq": 4, "creat": [4, 8], "median": 4, "frequenc": 4, "dictionari": [4, 5], "bitfrequ": 4, "bitanalys": 4, "name": [4, 8], "labelencod": 4, "each": [4, 8], "pair": 4, "y_score": 4, "includ": [5, 7, 8, 9], "variou": [5, 7, 8, 9], "some": 5, "text": 5, "here": 5, "describ": 5, "link": 5, "binbit": 5, "3": 5, "img": 5, "function": [5, 7, 8], "take": 5, "an": [5, 7, 8], "imag": [5, 8], "digest": 5, "correspond": [5, 8], "path": [5, 8, 9], "run": 5, "absolut": 5, "origin": [5, 8], "dataset": 5, "all": [5, 8], "hash_siz": 5, "highfreq_factor": 5, "abc": [5, 8], "abstract": [5, 8], "image_scal": 5, "mode": 5, "haar": 5, "remove_max_haar_l": 5, "m_dict": 7, "set_class": 7, "bit_weight": 7, "n_sampl": 7, "100": 7, "random_st": 7, "42": 7, "num_imag": 7, "u": 7, "v": 7, "w": 7, "dummi": 7, "distanc": 7, "simul": 7, "good": 7, "perform": 7, "caller": 7, "introspect": 7, "determin": 7, "which": 7, "distribut": 7, "draw": 7, "light": 7, "valid": 7, "provid": 7, "should": [7, 8], "scipi": 7, "spatial": 7, "custom": 7, "we": 7, "least": 7, "check": 7, "see": 7, "callabl": 7, "either": [7, 8], "abov": 7, "condit": 7, "ar": 7, "met": 7, "empti": 7, "throw": 7, "except": 7, "border_colour": 8, "255": 8, "border_width": 8, "10": 8, "savetodir": 8, "savetosubdir": 8, "image_obj": 8, "method": 8, "actual": 8, "modifi": 8, "pil": 8, "tranform": 8, "copi": 8, "cropbox_factor": 8, "cropbox_absolut": 8, "box": 8, "specifi": 8, "how": 8, "much": 8, "remov": 8, "edg": 8, "factor": 8, "multipl": 8, "dimens": 8, "befor": 8, "exact": 8, "number": 8, "pixel": 8, "left": 8, "upper": 8, "right": 8, "lower": 8, "5": 8, "drom": 8, "bottom": 8, "top": 8, "x": 8, "axi": 8, "length": 8, "both": 8, "20": 8, "must": 8, "call": 8, "inherit": 8, "brightnessfactor": 8, "colourfactor": 8, "contrastfactor": 8, "sharpnessfactor": 8, "direct": 8, "horizont": 8, "scalefactor": 8, "fixed_dimens": 8, "thumbnail_aspect": 8, "degrees_counter_clockwis": 8, "dirpath": 8, "special": 8, "rather": 8, "than": 8, "new": 8, "load": 8, "one": 8, "alreadi": 8, "exist": 8, "disk": 8, "doe": 8, "requir": 8, "save": 8, "subdirectori": 8, "flag": 8, "shouldn": 8, "t": 8, "need": 8, "write": 8, "anyth": 8, "though": 8, "realli": 8, "save_directori": 8, "filenam": [8, 9], "file": 8, "onli": 8, "when": 8, "original_path": 8, "get": 8, "same": 8, "wa": 8, "filepath": 8, "image_height_factor": 8, "minheight": 8, "40": 8, "watermark_path": 8, "resourc": 8, "png": 8, "encod": 9}, "objects": {"": [[3, 0, 0, "-", "phaser"]], "phaser": [[4, 0, 0, "-", "evaluation"], [5, 0, 0, "-", "hashing"], [7, 0, 0, "-", "similarities"], [8, 0, 0, "-", "transformers"], [9, 0, 0, "-", "utils"]], "phaser.evaluation": [[4, 1, 1, "", "BitAnalyzer"], [4, 1, 1, "", "ComputeMetrics"], [4, 1, 1, "", "MetricMaker"], [4, 3, 1, "", "calc_eer"], [4, 3, 1, "", "dist_stats"], [4, 3, 1, "", "make_bit_weights"], [4, 3, 1, "", "pred_at_threshold"]], "phaser.evaluation.BitAnalyzer": [[4, 2, 1, "", "fit"]], "phaser.evaluation.ComputeMetrics": [[4, 2, 1, "", "fit"]], "phaser.evaluation.MetricMaker": [[4, 2, 1, "", "get_cm"], [4, 2, 1, "", "get_fpr_threshold"]], "phaser.hashing": [[5, 1, 1, "", "ColourHash"], [5, 1, 1, "", "ComputeHashes"], [5, 1, 1, "", "PHash"], [5, 1, 1, "", "PdqHash"], [5, 1, 1, "", "PerceptualHash"], [5, 1, 1, "", "WaveHash"]], "phaser.hashing.ColourHash": [[5, 2, 1, "", "fit"]], "phaser.hashing.ComputeHashes": [[5, 2, 1, "", "fit"]], "phaser.hashing.PHash": [[5, 2, 1, "", "fit"]], "phaser.hashing.PdqHash": [[5, 2, 1, "", "fit"]], "phaser.hashing.PerceptualHash": [[5, 2, 1, "", "fit"]], "phaser.hashing.WaveHash": [[5, 2, 1, "", "fit"]], "phaser.similarities": [[7, 1, 1, "", "InterDistance"], [7, 1, 1, "", "IntraDistance"], [7, 3, 1, "", "find_inter_samplesize"], [7, 3, 1, "", "test_synthetic"], [7, 3, 1, "", "validate_metrics"]], "phaser.similarities.InterDistance": [[7, 2, 1, "", "fit"]], "phaser.similarities.IntraDistance": [[7, 2, 1, "", "fit"]], "phaser.transformers": [[8, 1, 1, "", "Border"], [8, 1, 1, "", "Crop"], [8, 1, 1, "", "Enhance"], [8, 1, 1, "", "Flip"], [8, 1, 1, "", "Rescale"], [8, 1, 1, "", "Rotate"], [8, 1, 1, "", "TransformFromDisk"], [8, 1, 1, "", "Transformer"], [8, 1, 1, "", "Watermark"]], "phaser.transformers.Border": [[8, 2, 1, "", "fit"]], "phaser.transformers.Crop": [[8, 2, 1, "", "fit"]], "phaser.transformers.Enhance": [[8, 2, 1, "", "fit"]], "phaser.transformers.Flip": [[8, 2, 1, "", "fit"]], "phaser.transformers.Rescale": [[8, 2, 1, "", "fit"]], "phaser.transformers.Rotate": [[8, 2, 1, "", "fit"]], "phaser.transformers.TransformFromDisk": [[8, 2, 1, "", "fit"]], "phaser.transformers.Transformer": [[8, 2, 1, "", "fit"], [8, 2, 1, "", "saveToDisk"]], "phaser.transformers.Watermark": [[8, 2, 1, "", "fit"]], "phaser.utils": [[9, 1, 1, "", "ImageLoader"], [9, 3, 1, "", "bin2bool"], [9, 3, 1, "", "bool2binstring"], [9, 3, 1, "", "dump_labelencoders"], [9, 3, 1, "", "load_labelencoders"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"exampl": 0, "us": 0, "case": 0, "welcom": 1, "phaser": [1, 2, 3, 4, 5, 6, 7, 8, 9], "": 1, "document": 1, "content": [1, 3, 4, 5, 6, 7, 8, 9], "indic": 1, "tabl": 1, "packag": [3, 4, 5, 6, 7, 8, 9], "subpackag": 3, "modul": [3, 4, 5, 6, 7, 8, 9], "evalu": 4, "hash": 5, "h1": 5, "insid": 5, "plot": 6, "similar": 7, "transform": 8, "util": 9}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Example use cases": [[0, "example-use-cases"]], "Welcome to phasers\u2019s documentation!": [[1, "welcome-to-phasers-s-documentation"]], "Contents:": [[1, null]], "Indices and tables": [[1, "indices-and-tables"]], "phaser": [[2, "phaser"]], "phaser package": [[3, "phaser-package"]], "Subpackages": [[3, "subpackages"]], "Module contents": [[3, "module-phaser"], [4, "module-phaser.evaluation"], [5, "module-phaser.hashing"], [6, "module-contents"], [7, "module-phaser.similarities"], [8, "module-phaser.transformers"], [9, "module-phaser.utils"]], "phaser.evaluation package": [[4, "phaser-evaluation-package"]], "phaser.hashing package": [[5, "phaser-hashing-package"]], "H1 inside module contents": [[5, "h1-inside-module-contents"]], "phaser.plotting package": [[6, "phaser-plotting-package"]], "phaser.similarities package": [[7, "phaser-similarities-package"]], "phaser.transformers package": [[8, "phaser-transformers-package"]], "phaser.utils package": [[9, "phaser-utils-package"]]}, "indexentries": {"module": [[3, "module-phaser"], [4, "module-phaser.evaluation"], [5, "module-phaser.hashing"], [7, "module-phaser.similarities"], [8, "module-phaser.transformers"], [9, "module-phaser.utils"]], "phaser": [[3, "module-phaser"]], "bitanalyzer (class in phaser.evaluation)": [[4, "phaser.evaluation.BitAnalyzer"]], "computemetrics (class in phaser.evaluation)": [[4, "phaser.evaluation.ComputeMetrics"]], "metricmaker (class in phaser.evaluation)": [[4, "phaser.evaluation.MetricMaker"]], "calc_eer() (in module phaser.evaluation)": [[4, "phaser.evaluation.calc_eer"]], "dist_stats() (in module phaser.evaluation)": [[4, "phaser.evaluation.dist_stats"]], "fit() (phaser.evaluation.bitanalyzer method)": [[4, "phaser.evaluation.BitAnalyzer.fit"]], "fit() (phaser.evaluation.computemetrics method)": [[4, "phaser.evaluation.ComputeMetrics.fit"]], "get_cm() (phaser.evaluation.metricmaker method)": [[4, "phaser.evaluation.MetricMaker.get_cm"]], "get_fpr_threshold() (phaser.evaluation.metricmaker method)": [[4, "phaser.evaluation.MetricMaker.get_fpr_threshold"]], "make_bit_weights() (in module phaser.evaluation)": [[4, "phaser.evaluation.make_bit_weights"]], "phaser.evaluation": [[4, "module-phaser.evaluation"]], "pred_at_threshold() (in module phaser.evaluation)": [[4, "phaser.evaluation.pred_at_threshold"]], "colourhash (class in phaser.hashing)": [[5, "phaser.hashing.ColourHash"]], "computehashes (class in phaser.hashing)": [[5, "phaser.hashing.ComputeHashes"]], "phash (class in phaser.hashing)": [[5, "phaser.hashing.PHash"]], "pdqhash (class in phaser.hashing)": [[5, "phaser.hashing.PdqHash"]], "perceptualhash (class in phaser.hashing)": [[5, "phaser.hashing.PerceptualHash"]], "wavehash (class in phaser.hashing)": [[5, "phaser.hashing.WaveHash"]], "fit() (phaser.hashing.colourhash method)": [[5, "phaser.hashing.ColourHash.fit"]], "fit() (phaser.hashing.computehashes method)": [[5, "phaser.hashing.ComputeHashes.fit"]], "fit() (phaser.hashing.phash method)": [[5, "phaser.hashing.PHash.fit"]], "fit() (phaser.hashing.pdqhash method)": [[5, "phaser.hashing.PdqHash.fit"]], "fit() (phaser.hashing.perceptualhash method)": [[5, "phaser.hashing.PerceptualHash.fit"]], "fit() (phaser.hashing.wavehash method)": [[5, "phaser.hashing.WaveHash.fit"]], "phaser.hashing": [[5, "module-phaser.hashing"]], "interdistance (class in phaser.similarities)": [[7, "phaser.similarities.InterDistance"]], "intradistance (class in phaser.similarities)": [[7, "phaser.similarities.IntraDistance"]], "find_inter_samplesize() (in module phaser.similarities)": [[7, "phaser.similarities.find_inter_samplesize"]], "fit() (phaser.similarities.interdistance method)": [[7, "phaser.similarities.InterDistance.fit"]], "fit() (phaser.similarities.intradistance method)": [[7, "phaser.similarities.IntraDistance.fit"]], "phaser.similarities": [[7, "module-phaser.similarities"]], "test_synthetic() (in module phaser.similarities)": [[7, "phaser.similarities.test_synthetic"]], "validate_metrics() (in module phaser.similarities)": [[7, "phaser.similarities.validate_metrics"]], "border (class in phaser.transformers)": [[8, "phaser.transformers.Border"]], "crop (class in phaser.transformers)": [[8, "phaser.transformers.Crop"]], "enhance (class in phaser.transformers)": [[8, "phaser.transformers.Enhance"]], "flip (class in phaser.transformers)": [[8, "phaser.transformers.Flip"]], "rescale (class in phaser.transformers)": [[8, "phaser.transformers.Rescale"]], "rotate (class in phaser.transformers)": [[8, "phaser.transformers.Rotate"]], "transformfromdisk (class in phaser.transformers)": [[8, "phaser.transformers.TransformFromDisk"]], "transformer (class in phaser.transformers)": [[8, "phaser.transformers.Transformer"]], "watermark (class in phaser.transformers)": [[8, "phaser.transformers.Watermark"]], "fit() (phaser.transformers.border method)": [[8, "phaser.transformers.Border.fit"]], "fit() (phaser.transformers.crop method)": [[8, "phaser.transformers.Crop.fit"]], "fit() (phaser.transformers.enhance method)": [[8, "phaser.transformers.Enhance.fit"]], "fit() (phaser.transformers.flip method)": [[8, "phaser.transformers.Flip.fit"]], "fit() (phaser.transformers.rescale method)": [[8, "phaser.transformers.Rescale.fit"]], "fit() (phaser.transformers.rotate method)": [[8, "phaser.transformers.Rotate.fit"]], "fit() (phaser.transformers.transformfromdisk method)": [[8, "phaser.transformers.TransformFromDisk.fit"]], "fit() (phaser.transformers.transformer method)": [[8, "phaser.transformers.Transformer.fit"]], "fit() (phaser.transformers.watermark method)": [[8, "phaser.transformers.Watermark.fit"]], "phaser.transformers": [[8, "module-phaser.transformers"]], "savetodisk() (phaser.transformers.transformer method)": [[8, "phaser.transformers.Transformer.saveToDisk"]], "imageloader (class in phaser.utils)": [[9, "phaser.utils.ImageLoader"]], "bin2bool() (in module phaser.utils)": [[9, "phaser.utils.bin2bool"]], "bool2binstring() (in module phaser.utils)": [[9, "phaser.utils.bool2binstring"]], "dump_labelencoders() (in module phaser.utils)": [[9, "phaser.utils.dump_labelencoders"]], "load_labelencoders() (in module phaser.utils)": [[9, "phaser.utils.load_labelencoders"]], "phaser.utils": [[9, "module-phaser.utils"]]}})